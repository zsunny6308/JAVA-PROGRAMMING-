import java.math.BigInteger;
import java.util.Scanner;

public class LCMGCD {
    
    // Function to find GCD of two numbers
    public static BigInteger findGCD(BigInteger a, BigInteger b) {
        if (b.equals(BigInteger.ZERO)) {
            return a;
        }
        return findGCD(b, a.mod(b));
    }
    
    // Function to find LCM of two numbers
    public static BigInteger findLCM(BigInteger a, BigInteger b) {
        return a.multiply(b).divide(findGCD(a, b));
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the value of N: ");
        int N = scanner.nextInt();
        
        BigInteger[] numbers = new BigInteger[N];
        
        for (int i = 0; i < N; i++) {
            System.out.print("Enter number " + (i + 1) + ": ");
            numbers[i] = scanner.nextBigInteger();
        }
        
        scanner.close();
        
        BigInteger lcm = numbers[0];
        BigInteger gcd = numbers[0];
        
        for (int i = 1; i < N; i++) {
            lcm = findLCM(lcm, numbers[i]);
            gcd = findGCD(gcd, numbers[i]);
        }
        
        System.out.println("LCM = " + lcm);
        System.out.println("GCD = " + gcd);
    }
}
